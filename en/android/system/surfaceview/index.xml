<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>surfaceview on 郑欢的学习总结</title>
    <link>https://huanle19891345.github.io/en/android/system/surfaceview/</link>
    <description>Recent content in surfaceview on 郑欢的学习总结</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language><atom:link href="https://huanle19891345.github.io/en/android/system/surfaceview/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SurfaceViewSource</title>
      <link>https://huanle19891345.github.io/en/android/system/surfaceview/surfaceviewsource/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://huanle19891345.github.io/en/android/system/surfaceview/surfaceviewsource/</guid>
      <description>源码位置: frameworks/base/core/java/android/view/SurfaceView.java
surfaceView support scale and translation to its parent or itself
onAttachedToWindow @Override protected void onAttachedToWindow() { super.onAttachedToWindow(); getViewRootImpl().addWindowStoppedCallback(this); mWindowStopped = false; mViewVisibility = getVisibility() == VISIBLE; updateRequestedVisibility(); mAttachedToWindow = true; mParent.requestTransparentRegion(SurfaceView.this);//main  if (!mGlobalListenersAdded) { ViewTreeObserver observer = getViewTreeObserver(); observer.addOnScrollChangedListener(mScrollChangedListener); observer.addOnPreDrawListener(mDrawListener); mGlobalListenersAdded = true; } } requestTransparentRegion //ViewGroup  @Override public void requestTransparentRegion(View child) { if (child != null) { child.mPrivateFlags |= View.PFLAG_REQUEST_TRANSPARENT_REGIONS; if (mParent != null) { mParent.</description>
    </item>
    
  </channel>
</rss>
